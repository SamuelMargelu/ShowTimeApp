@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">ShowTime</a>
	</div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<!-- Invisible hover trigger for desktop -->
<div class="nav-hover-trigger"></div>

<!-- Navigation hint indicator -->
<div class="nav-hint"></div>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
	<nav class="flex-column">


		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
			</NavLink>
		</div>

		<AuthorizeView Roles="Admin">
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="BandCrudTest">
					<Icon Name="IconName.Clipboard"></Icon>
					<span class="bi bi-music-note-beamed-nav-menu" aria-hidden="true"></span> Band CRUD Test
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="FestivalCrudTest">
					<Icon Name="IconName.Clipboard"></Icon>
					<span class="bi bi-calendar-event-nav-menu" aria-hidden="true"></span> Festival CRUD Test
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="BookingCrudTest">
					<Icon Name="IconName.Clipboard"></Icon>
					<span class="bi bi-calendar-event-nav-menu" aria-hidden="true"></span> Bookings CRUD Test
				</NavLink>
			</div>
		</AuthorizeView>

		<AuthorizeView Roles="Admin">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="CreateBand">
					<Icon Name="IconName.PlusCircle"></Icon>
				<span class="bi bi-calendar-event-nav-menu" aria-hidden="true"></span> Create Band
			</NavLink>
		</div>
		</AuthorizeView>

		<AuthorizeView Roles="Admin">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="CreateFestival">
				<Icon Name="IconName.PlusCircle"></Icon>
				<span class="bi bi-calendar-event-nav-menu" aria-hidden="true"></span> Create Festival
			</NavLink>
		</div>
		</AuthorizeView>

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="BandList">
				<Icon Name="IconName.Music"></Icon>
				<span class="bi bi-calendar-event-nav-menu" aria-hidden="true"></span> Bands
			</NavLink>
		</div>


		<div class="nav-item px-3">
			<NavLink class="nav-link" href="FestivalList">
				<Icon Name="IconName.Star"></Icon>
				<span class="bi bi-calendar-event-nav-menu" aria-hidden="true"></span> Festivals
			</NavLink>
		</div>


		<AuthorizeView>
			<Authorized>
				<div class="nav-item px-3">
					<NavLink class="nav-link" href="Account/Manage">
						<span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
					</NavLink>
				</div>
				<div class="nav-item px-3">
					<form action="Account/Logout" method="post">
						<AntiforgeryToken />
						<input type="hidden" name="ReturnUrl" value="@currentUrl" />
						<button type="submit" class="nav-link">
							<Icon Name="IconName.ArrowLeft"></Icon>
							<span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
						</button>
					</form>
				</div>
			</Authorized>
			<NotAuthorized>
				<div class="nav-item px-3">
					<NavLink class="nav-link" href="Account/Register">
						<Icon Name="IconName.UserPlus"></Icon>
						<span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
					</NavLink>
				</div>
				<div class="nav-item px-3">
					<NavLink class="nav-link" href="Account/Login">
						<Icon Name="IconName.User"></Icon>
						<span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
					</NavLink>
				</div>
			</NotAuthorized>
		</AuthorizeView>

	</nav>
</div>

@code {
	private string? currentUrl;

	protected override void OnInitialized()
	{
		currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
		NavigationManager.LocationChanged += OnLocationChanged;
	}

	private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
	{
		currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
		StateHasChanged();
	}

	public void Dispose()
	{
		NavigationManager.LocationChanged -= OnLocationChanged;
	}
}